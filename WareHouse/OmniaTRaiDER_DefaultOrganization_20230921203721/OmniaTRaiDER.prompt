We need to design an algorithmic trading application with a graphical interface for monitoring account status, balances, positions, as well as potential trades being monitored, active trades, and a log of closed trades. The application needs to keep a strict log of all trades that are made, complete with statistical analysis on the trades and the potential trade set-ups the algorithm is considering, and it must follow strict risk management that gives our trades a statistical edge toward successfully capturing profit, while minimizing losses on losing trades. We need to use the Canadian brokerage Questrade so use the access token of access_token=UksNMCeLid3FtK67x3xYxtndUHHu8QOf0 to acquire historical data from the past 5 years. Capture as much data as we can to make, train, and test our algorithm. Include functionality to create a historical log of popular stocks with highly liquid options contracts, as we will be trading options with this algorithm. I would like to track the 50 most liquid and highly-traded options pools, so if possible, generate a list of these stocks and output their historical price action into excel workbooks. We need to develop an algorithm with edge and a competitive risk-reward strategy, so please use a series of momentum indicators to track market trends to alert for a play with high statistical probability based on price action and effective momentum indicators. Select appropriate python libraries for indicators and backtesting, and use any combination of indicators that appear to give a statistical edge on successfully tracking the trend direction